name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:

env:
  DOCKERHUB_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/ph-24-backend
  GHCR_IMAGE: ghcr.io/mcesarczyk/personal-homepage-2024-backend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        # uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # tags: |
          #   type=sha
          #   type=raw,value=latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        # uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: 'image=moby/buildkit:v0.11.6'

      - name: Build and push Docker image
        id: push
        # uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKERHUB_IMAGE }}:latest
            ${{ env.DOCKERHUB_IMAGE }}:${{ github.sha }}
            ${{ env.GHCR_IMAGE }}:latest
            ${{ env.GHCR_IMAGE }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
